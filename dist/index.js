#!/usr/bin/env node
import{d as f,f as h,g as d,h as S}from"./chunk-QOYKB5RZ.js";import u from"fs";import k from"path";import{bold as i,cyan as l,gray as A,green as N,red as J}from"kleur/colors";import w from"prompts";import m from"fs";import g from"path";var O=async(e,t)=>{f(e),j(t.template,t.name,e),C(e,t,t.name)};function j(e,t,s){let o=d(`templates/${e}`);h(`${o}/assets`,s,a=>a.replace("DOT-",".")),h(`${o}/package.json`,`${s}/package.json`);let r=`${o}/files.types=typescript.json`;JSON.parse(m.readFileSync(r,"utf-8")).forEach(a=>{let n=g.join(s,a.name);f(g.dirname(n)),m.writeFileSync(n,a.contents.replace(/~TODO~/g,t))})}function C(e,t,s){let o=d("templates/shared.json"),{files:r}=JSON.parse(m.readFileSync(o,"utf-8")),c=g.join(e,"package.json"),a=JSON.parse(m.readFileSync(c,"utf-8"));F(r).forEach(n=>{let v=n.include.every(p=>$(p,t));if(!(n.exclude.some(p=>$(p,t))||!v))if(n.name==="package.json"){let p=JSON.parse(n.contents);x(a,p)}else{let p=g.join(e,n.name);f(g.dirname(p)),m.writeFileSync(p,n.contents)}}),a.dependencies=_(a.dependencies),a.devDependencies=_(a.devDependencies),a.name=b(s),m.writeFileSync(c,JSON.stringify(a,null,"	")+`
`)}var $=(e,t)=>e==="default"?t.template===e:e==="eslint"||e==="prettier"?t.addons.includes(e):e==="prisma"||e==="trpc"||e==="tailwind"?t.packages.includes(e):t[e],x=(e,t)=>{for(let s in t)if(s in e){let o=e[s],r=t[s];if(typeof r!=typeof o||Array.isArray(r)!==Array.isArray(o))throw new Error("Mismatched values");typeof r=="object"?x(o,r):e[s]=r}else e[s]=t[s]},_=e=>{if(!e)return;let t={};return Object.keys(e).sort().forEach(s=>{t[s]=e[s]}),t},F=e=>e.sort((t,s)=>{let o=t.include.every(n=>s.include.includes(n))&&t.exclude.every(n=>s.exclude.includes(n)),r=s.include.every(n=>t.include.includes(n))&&s.exclude.every(n=>t.exclude.includes(n));return o&&r||!o&&!r?0:o?-1:1}),b=e=>e.trim().toLowerCase().replace(/\s+/g,"-").replace(/^[._]/,"").replace(/[^a-z0-9~.-]+/g,"-");var{version:P}=JSON.parse(u.readFileSync(new URL("../package.json",import.meta.url),"utf-8")),y=S(),T=async()=>{console.log(A(`create-t3svelte-app version ${P} run with ${y}`)),console.log(`
${i(l("Welcome to ")+J("Create-T3Svelte-App"))}
`);let e=process.argv[2]||".";if(e==="."){let c=await w([{type:"text",name:"dir",message:"What do you want to call the project?"}],{onCancel:()=>process.exit(1)});c.dir&&(e=c.dir)}u.existsSync(e)&&u.readdirSync(e).length>0&&((await w({type:"confirm",name:"value",message:"Directory not empty. Continue?",initial:!1})).value||process.exit(1));let t=await w([{type:"select",name:"template",message:"What template would you like to use?",choices:u.readdirSync(d("templates")).flatMap(c=>{if(!u.lstatSync(d(`templates/${c}`)).isDirectory())return[];let a=d(`templates/${c}/meta.json`),{title:n,description:v}=JSON.parse(u.readFileSync(a,"utf8"));return{title:n,description:v,value:c}})},{type:"multiselect",name:"packages",message:"What packages would you like to enable?",choices:[{title:"tRPC",value:"trpc",selected:!0},{title:"Prisma",value:"prisma",selected:!0},{title:"Tailwind",value:"tailwind",selected:!0}]},{type:"multiselect",name:"addons",message:"What additional tooling do you like to enable?",choices:[{title:"ESLint",value:"eslint",selected:!0},{title:"Prettier",value:"prettier",selected:!0}]}],{onCancel:()=>{process.exit(1)}}),s={...t,name:k.basename(k.resolve(e)),addons:t.addons,packages:t.packages};await O(e,s),console.log(i(N(`
Your project is ready!`))),console.log(i("\u2714 Typescript")),console.log('  Inside Svelte components, use <script lang="ts">'),s.packages.includes("trpc")&&(console.log(i("\u2714 tRPC")),console.log(l("  https://trpc.io/docs"))),s.packages.includes("prisma")&&(console.log(i("\u2714 Prisma")),console.log(l("  https://www.prisma.io/docs"))),s.packages.includes("tailwind")&&(console.log(i("\u2714 Tailwind")),console.log(l("  https://tailwindcss.com/docs"))),s.addons.includes("eslint")&&(console.log(i("\u2714 ESLint")),console.log(l("  https://eslint.org/docs/latest"))),s.addons.includes("prettier")&&(console.log(i("\u2714 Prettier")),console.log(l("  https://prettier.io/docs/en/index.html"))),console.log(`
Next steps:`);let o=1,r=k.relative(process.cwd(),e);r!==""&&console.log(`  ${o++}: ${i(l(`cd ${r}`))}`),console.log(`  ${o++}: ${i(l(`${y} install`))}`),s.packages.includes("prisma")&&console.log(`  ${o++}: ${i(l(`${y} run db-push`))} (optional - sync a database schema)`),console.log(`  ${o++}: ${i(l(`${y} run dev`))}`),console.log(`
To close the dev server, hit ${i(l("Ctrl-C"))}`),console.log(`Stuck? Visit the official svelte website at ${l("https://svelte.dev/chat")}
`)};T();
//# sourceMappingURL=index.js.map